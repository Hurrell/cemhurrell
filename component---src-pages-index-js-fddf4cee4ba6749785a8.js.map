{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/pages/index.js"],"names":["Image","props","query","render","data","image","images","edges","find","n","node","relativePath","includes","filename","imageFluid","childImageSharp","fluid","alt","IndexPage","currentPage","title","className","href"],"mappings":"uNAqCeA,EAjCD,SAAAC,GAAK,OACjB,kBAAC,cAAD,CACEC,MAAK,aAiBLC,OAAQ,SAAAC,GACN,IAAMC,EAAQD,EAAKE,OAAOC,MAAMC,MAAK,SAAAC,GACnC,OAAOA,EAAEC,KAAKC,aAAaC,SAASX,EAAMY,aAE5C,IAAKR,EACH,OAAO,KAGT,IAAMS,EAAaT,EAAMK,KAAKK,gBAAgBC,MAC9C,OAAO,kBAAC,IAAD,CAAKC,IAAKhB,EAAMgB,IAAKD,MAAOF,QCuD1BI,UA7EG,WAChB,OACE,kBAAC,IAAD,CAAQC,YAAY,YAClB,kBAAC,IAAD,CAAKC,MAAM,SACX,yBAAKC,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAOR,SAAS,sCAElB,yBAAKQ,UAAU,iBACb,kBAAC,EAAD,CAAOR,SAAS,sCAElB,yBAAKQ,UAAU,iBACb,kBAAC,EAAD,CAAOR,SAAS,uCAGpB,yBAAKQ,UAAU,mBACb,wCACA,2BACE,gEAEF,uBAAGA,UAAU,uBAAb,kNAMA,yBAAKA,UAAU,0BACb,sDACA,2BACE,uBAAGC,KAAK,+BAAR,uBACA,qCACA,uBAAGA,KAAK,8CAAR,cAKR,yBAAKD,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAOR,SAAS,+BAElB,yBAAKQ,UAAU,iBACb,kBAAC,EAAD,CAAOR,SAAS,sCAElB,yBAAKQ,UAAU,iBACb,kBAAC,EAAD,CAAOR,SAAS,wCAGpB,yBAAKQ,UAAU,mBACb,0CACA,2BACE,wDAEF,uBAAGA,UAAU,uBAAb,2QAOA,yBAAKA,UAAU,0BACb,yDACA,2BACE,uBAAGC,KAAK,oCAAR,2BAGA,qCACA,uBAAGA,KAAK,qCAAR","file":"component---src-pages-index-js-fddf4cee4ba6749785a8.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Image = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                fluid(maxWidth: 400) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(props.filename)\n      })\n      if (!image) {\n        return null\n      }\n\n      const imageFluid = image.node.childImageSharp.fluid\n      return <Img alt={props.alt} fluid={imageFluid} />\n    }}\n  />\n)\n\nexport default Image\n","import React from \"react\"\n// import { Link } from \"gatsby\"\n\nimport \"./index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport Image from \"../components/image\"\n\nconst IndexPage = () => {\n  return (\n    <Layout currentPage=\"Projects\">\n      <SEO title=\"Home\" />\n      <div className=\"project\">\n        <div className=\"project-images\">\n          <div className=\"project-image\">\n            <Image filename=\"patchpal_screenshot_1_transp.png\" />\n          </div>\n          <div className=\"project-image\">\n            <Image filename=\"patchpal_screenshot_2_transp.png\" />\n          </div>\n          <div className=\"project-image\">\n            <Image filename=\"patchpal_screenshot_3_transp.png\" />\n          </div>\n        </div>\n        <div className=\"project-details\">\n          <h3>PatchPal</h3>\n          <p>\n            <i>Design, Specification and build.</i>\n          </p>\n          <p className=\"project-description\">\n            A mobile-first web app that allows easy navigation around a database\n            of event lighting equipment. Users can look up key facts, and add\n            the lights to a list to quickly find their total weight and power\n            draw.\n          </p>\n          <div className=\"project-details-footer\">\n            <p>React | JS | HTML | CSS</p>\n            <p>\n              <a href=\"https://www.patchpalapp.com\">www.patchpalapp.com</a>\n              <span> | </span>\n              <a href=\"https://www.github.com/Hurrell/patchpalapp\">Github</a>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"project\">\n        <div className=\"project-images\">\n          <div className=\"project-image\">\n            <Image filename=\"moniesDue_form_transp.png\" />\n          </div>\n          <div className=\"project-image\">\n            <Image filename=\"moniesDue_requestJson_transp.png\" />\n          </div>\n          <div className=\"project-image\">\n            <Image filename=\"moniesDue_returnedJson_transp.png\" />\n          </div>\n        </div>\n        <div className=\"project-details\">\n          <h3>Monies Due</h3>\n          <p>\n            <i>Specification and build.</i>\n          </p>\n          <p className=\"project-description\">\n            A simple API that calculates and returns a tax estimate for UK\n            freelancers based on submitted income information. There's a simple\n            front end form for testing, and the Github Readme contains the\n            necessary instructions for use and details all the available\n            options.\n          </p>\n          <div className=\"project-details-footer\">\n            <p>Express | Node.js | Heroku</p>\n            <p>\n              <a href=\"https://moniesdue.herokuapp.com/\">\n                moniesdue.herokuapp.com\n              </a>\n              <span> | </span>\n              <a href=\"https://github.com/Hurrell/taxAPI\">Github</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}